#!/bin/bash

#
# This script is refer to SunKi's work as follow.                                by crazybirdy. 20180810
#
# http://www.insanelymac.com/forum/topic/327488-macos-high-sierra-final-release-is-out-17a365/?p=2505086
#

printf '\033[8;35;120t'
if [[ -f "/usr/bin/clear" ]]; then
	clear
fi

function ich10patch() {
	echo
	echo "Patch AppleAHCIPort.kext for ICH10 error as 'hot-plug', 'Still waiting for root device', 'disk1:I/O error'."
	echo
	echo "Available target volumes:"
	echo
	cd /Volumes
	AllVolumes=(*)
	indexA=0
	index=0
	for volume in "${AllVolumes[@]}"
	do
		targetforVolume="/Volumes/$volume"
		if [[ -f "$targetforVolume/System/Library/CoreServices/SystemVersion.plist" ]]; then
			ProductBuildVersion=`cat "$targetforVolume/System/Library/CoreServices/SystemVersion.plist" | grep -A 1 "ProductBuildVersion" | grep string | sed 's/<string>//' | sed 's/<\/string>//' | awk '{print $1;}' `
			ProductVersion=`cat "$targetforVolume/System/Library/CoreServices/SystemVersion.plist" | grep -A 1 "ProductVersion" | grep string | sed 's/<string>//' | sed 's/<\/string>//' | awk '{print $1;}' `
			SelectVersion=`echo $ProductVersion | sed 's/.\{5\}/& /g' | awk '{print $1;}' `
			if [[ $SelectVersion > 10.12 ]]; then
				if [[ -f "$targetforVolume/System/Library/Extensions/AppleAHCIPort.kext/Contents/MacOS/AppleAHCIPort" ]]; then
					AtlistVolume[$indexA]="$targetforVolume"
					OSVersion[$indexA]="$ProductVersion"
					OSBuildVersion[$indexA]="$ProductBuildVersion"					
					echo "[ $indexA ] ${AtlistVolume[$indexA]} ......... $ProductVersion $ProductBuildVersion"
					let indexA++
				fi
			fi
		fi
		let index++
	done

	echo 
	read -p "Select the AppleAHCIPort partition: " VolumeNumber
	if [[ ! ${AtlistVolume[$VolumeNumber]} ]]; then
		echo
		echo "Error!!!"
		echo
		echo "Please select right target volume to update."
		echo
		exit 0
	fi
	targetVolume="${AtlistVolume[$VolumeNumber]}"

		echo "                                   [ $VolumeNumber ] $targetVolume ......... ${OSVersion[$VolumeNumber]} ${OSBuildVersion[$VolumeNumber]}"
		echo

		read -p "The target volume is selected, is it right? (y/n) " targetyesno
		case "$targetyesno" in
			y|Y)
				echo
			;;
			*)
				echo
				echo "Error!!!"
				echo
				echo "The selected target volume is not right."
				echo
				exit 0
			;;
		esac

	odbin="/usr/bin/od"
	diffbin="/usr/bin/diff"
	if [[ ! -f "/usr/bin/od" ]]; then
		odbin="${targetVolume}/usr/bin/od"
		diffbin="${targetVolume}/usr/bin/diff"
	fi

	echo
	echo "${targetVolume}/System/Library/Extensions/AppleAHCIPort.kext/Contents/MacOS/AppleAHCIPort"
	echo

	AppleAHCIPortbin="${targetVolume}/System/Library/Extensions/AppleAHCIPort.kext/Contents/MacOS/AppleAHCIPort"

	cp "${AppleAHCIPortbin}" "${AppleAHCIPortbin}-org"

	echo "Patch to fix 'hot-plug error', 'Still waiting for root device', 'disk1:I/O error':"
	echo
	echo "Find ...... 40600200"
	echo "Replace ... 00000000"
	echo

	perl -pi -e 's|\x40\x60\x02\x00|\x00\x00\x00\x00|g' "${AppleAHCIPortbin}"
	
	echo
	echo "Patching diff:"
	echo
	${diffbin} <(${odbin} -An -tx1 -v "${AppleAHCIPortbin}-org") <(${odbin} -An -tx1 -v "${AppleAHCIPortbin}")
	echo
	echo "Auto patch is done."
	echo

	rm -f "${AppleAHCIPortbin}-org"
}

if [[ -f "/usr/bin/whoami" ]]; then
	username=`whoami`
fi
echo
echo "User = $username"

if [[ "$username" == root ]]; then
	ich10patch
elif [[ "$username" == "" ]]; then
	ich10patch
elif [[ ! "$username" == root ]]; then
	echo 
	echo "This script must be run as root!"
	sudo "$0"
fi

exit 0